@use "variables.scss";
@use "function.scss";


@mixin article-card($color, $border-color, $size-font ){
    font-size: $size-font;
    border: function.rem(1) solid $border-color;
    color: $color;
    padding: function.rem(15);
}


div {
    border: function.rem(1) solid variables.$color-primary;
    display: flex;
    flex-direction: column;
    align-items: center;

      %text{
        color: variables.$color-tertiary; 
        text-decoration: underline;
        text-decoration-color: purple;       
      }
      h1{
        @extend %text;
      }
      h2{
        @extend %text;
        padding: 1rem;
        border: 1px solid red;
      }
      
      #articles{
        display: flex;
        flex-direction: row;
        justify-content: center;
        margin-bottom: function.rem(15);

        article:nth-child(odd){
            @include article-card(variables.$color-primary, variables.$color-tertiary, variables.$articles-font-size);
            width: 20%;
        }

        article:nth-child(even){
            @include article-card(variables.$color-secondary, variables.$color-tertiary, variables.$articles-font-size);
            width: 20%;
        }
        }
        .footer-article{
            @include article-card(variables.$color-tertiary, variables.$color-secondary, variables.$footer-font-size);
            width: calc(80vw + function.rem(80));
            text-align: center;
            margin-bottom: function.rem(15);
        }
    
  
    .numbers{
      display: flex;
      flex-direction: row;
      gap: 1.85vw;
      margin:20px;
      
      div{
        width: function.rem(45);
        height: function.rem(45);
      }
      $sizes: 1rem, 2rem, 3rem;

      @each $size in $sizes {
        .fs-#{$size} {
          font-size: $size;
        }
      }
      @for $index from 1 to 20{
        @if $index == 10{
          div:nth-child(#{$index}){
            background-color: blue;
            color: red;
          }
        }
        @else{
          div:nth-child(#{$index}){
            color: rgb($index * 13, $index *13, $index *13);
            background-color: rgb(255-$index *13, 255-$index *13, 255-$index *13);
          }
        }
      }
      
    }

}


